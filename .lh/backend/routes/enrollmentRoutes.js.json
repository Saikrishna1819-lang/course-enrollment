{
    "sourceFile": "backend/routes/enrollmentRoutes.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1754033136667,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1754033262475,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import express from \"express\"\r\n-import Enrollment from \"../models/Enrollment\"\r\n-import Course from \"../models/Course\"\r\n+import Enrollment from \"../models/Enrollment.js\"\r\n+import Course from \"../models/Course.js\"\r\n \r\n const enrollRouter=express.Router()\r\n \r\n const DUMMY_EMAIL='dummy@student.com'\r\n"
                }
            ],
            "date": 1754033136667,
            "name": "Commit-0",
            "content": "import express from \"express\"\r\nimport Enrollment from \"../models/Enrollment\"\r\nimport Course from \"../models/Course\"\r\n\r\nconst enrollRouter=express.Router()\r\n\r\nconst DUMMY_EMAIL='dummy@student.com'\r\nenrollRouter.get('/me',async(req,res)=>{\r\n    try {\r\n        const enrollments=await Enrollment.find({studentEmail:DUMMY_EMAIL}).populate(\"course\")\r\n        res.status(200).json(enrollments)\r\n    } catch (error) {\r\n        res.status(500).json({message:\"Failed to fetch Data of Enrollments\",error})\r\n        \r\n    }\r\n})\r\n\r\nenrollRouter.post('/',async(req,res)=>{\r\n    const {courseId}=req.body\r\n    if(!courseId){\r\n        return res.status(400).json({message:\"Course Id is required\"})\r\n    }\r\n\r\n    try {\r\n        const course=await Course.findById(courseId)\r\n        if(!course){\r\n            return res.status(404).json({message:\"Course not found\"})\r\n        }\r\n\r\n        const existing=await Enrollment.findOne({studentEmail:DUMMY_EMAIL,course:courseId})\r\n        if(existing){\r\n            return res.status(409).json({message:\"Already enrolled in this course\"})\r\n        }\r\n\r\n        const enrollment=new Enrollment({\r\n            studentEmail:DUMMY_EMAIL,\r\n            course:courseId\r\n        })\r\n        await enrollment.save()\r\n        res.status(201).json({message:\"Enrollment successful\",enrollment})\r\n    } catch (error) {\r\n        res.status(500).json({message:\"Failed to enroll\",error})\r\n    }\r\n})\r\n\r\nexport default enrollRouter\r\n\r\n"
        }
    ]
}